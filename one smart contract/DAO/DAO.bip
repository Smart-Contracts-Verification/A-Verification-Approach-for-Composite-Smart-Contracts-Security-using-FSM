model donateModel

	port type syncPort

 connector type SINGLE(syncPort p)
    define p
end

atomic type donate 
data int credit
data int amount1
data int amount

export port syncPort donate
export port syncPort creditPlusamount1
export port syncPort d1

export port syncPort queryCredit
export port syncPort q1
export port syncPort q2


export port syncPort withdraw
export port syncPort w1
export port syncPort w2
export port syncPort w3
export port syncPort w4
export port syncPort w5
export port syncPort w6
export port syncPort creditMinusamount

  place    invoke , functiondonate, addition, functionwithdraw, ifcondition, amount_availble, amount_not_availble, sending_ether_call, subtraction, functionqueryCredit, return

initial to invoke do {credit =5; amount = 3; amount1 = 5 ;}

on donate from invoke to functiondonate  
on creditPlusamount1 from functiondonate to addition do {credit = credit + amount1;}
on d1 from addition to invoke

on withdraw from invoke to functionwithdraw
on w1 from functionwithdraw to ifcondition
on w2 from ifcondition to  amount_availble provided (credit >= amount)
on w3 from ifcondition to  amount_not_availble provided (credit < amount)
on w4 from amount_availble to sending_ether_call
on creditMinusamount from sending_ether_call to subtraction do {credit = credit - amount ;}
on w5 from subtraction to invoke
on w6 from  amount_not_availble to invoke

on queryCredit from invoke to functionqueryCredit
on q1 from functionqueryCredit to return
on q2 from  return to invoke

end

compound type globModel

  component donate BAUC
  
  connector SINGLE BAUC_donate ( BAUC.donate )
  connector SINGLE BAUC_creditPlusamount1 ( BAUC.creditPlusamount1 )
  connector SINGLE BAUC_d1 ( BAUC.d1 )


 connector SINGLE BAUC_queryCredit ( BAUC.queryCredit )
  connector SINGLE BAUC_q1 ( BAUC.q1 )
  connector SINGLE BAUC_q2 ( BAUC.q2 )

connector SINGLE BAUC_withdraw ( BAUC.withdraw)
connector SINGLE BAUC_creditMinusamount ( BAUC.creditMinusamount)
connector SINGLE BAUC_w1 ( BAUC.w1)
connector SINGLE BAUC_w2 ( BAUC.w2)
connector SINGLE BAUC_w3 ( BAUC.w3)
connector SINGLE BAUC_w4 ( BAUC.w4)
connector SINGLE BAUC_w5 ( BAUC.w5)
connector SINGLE BAUC_w6 ( BAUC.w6)
  end

component globModel Root

 end