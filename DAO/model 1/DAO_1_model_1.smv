MODULE BAUC(active_interaction)

	VAR
		NuPDonate		:		boolean;
		NuPDonate1		:		boolean;
		NuPDonate2		:		boolean;
		NuPWithdraw		:		boolean;
		NuPTw0		:		boolean;
		NuPTw1		:		boolean;
		NuPTw2		:		boolean;
		NuPTw3		:		boolean;
		NuPTw4		:		boolean;
		NuPQueryCredit		:		boolean;
		NuPReturnCredit		:		boolean;
		NuVcredit		:		unsigned word[7];
		NuVamount1		:		unsigned word[7];
		NuVamount		:		unsigned word[7];
		Nuplace		:		{NuSinvoke, NuSdonate, NuSdonate1, NuSwithdraw, NuSw1, NuSw2, NuSw3, NuSqueryCredit};


	INIT
		( (Nuplace) = (NuSinvoke) ) &
		( (NuVcredit) = (0ud7_5) ) &
		( (NuVamount) = (0ud7_3) ) &
		( (NuVamount1) = (0ud7_5) );

	INVAR
		( (NuPTw3) <-> (( (Nuplace) = (NuSw2) )) ) &
		( (NuPTw4) <-> (( (Nuplace) = (NuSw3) )) ) &
		( (NuPDonate) <-> (( (Nuplace) = (NuSinvoke) )) ) &
		( (NuPQueryCredit) <-> (( (Nuplace) = (NuSinvoke) )) ) &
		( (NuPDonate2) <-> (( (Nuplace) = (NuSdonate1) )) ) &
		( (NuPTw1) <-> (( (( (Nuplace) = (NuSwithdraw) )) & (( (NuVcredit) >= (NuVamount) )) )) ) &
		( (NuPReturnCredit) <-> (( (Nuplace) = (NuSqueryCredit) )) ) &
		( (NuPDonate1) <-> (( (Nuplace) = (NuSdonate) )) ) &
		( (NuPWithdraw) <-> (( (Nuplace) = (NuSinvoke) )) ) &
		( (NuPTw2) <-> (( (Nuplace) = (NuSw1) )) ) &
		( (NuPTw0) <-> (( (( (Nuplace) = (NuSwithdraw) )) & (( (NuVcredit) < (NuVamount) )) )) );

	TRANS
		( (( (( (( (( (( (Nuplace) = (NuSinvoke) )) & (( (next(Nuplace)) = (NuSdonate) )) )) & (( (active_interaction) = (NuI1) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSdonate) )) & (( (next(Nuplace)) = (NuSdonate1) )) )) & (( (active_interaction) = (NuI2) )) )) & (( (next(NuVcredit)) = (( (NuVcredit) + (NuVamount1) )) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSdonate1) )) & (( (next(Nuplace)) = (NuSinvoke) )) )) & (( (active_interaction) = (NuI3) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSinvoke) )) & (( (next(Nuplace)) = (NuSwithdraw) )) )) & (( (active_interaction) = (NuI4) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSwithdraw) )) & (( (next(Nuplace)) = (NuSinvoke) )) )) & (( (active_interaction) = (NuI5) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSwithdraw) )) & (( (next(Nuplace)) = (NuSw1) )) )) & (( (active_interaction) = (NuI6) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSw1) )) & (( (next(Nuplace)) = (NuSw2) )) )) & (( (active_interaction) = (NuI7) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSw2) )) & (( (next(Nuplace)) = (NuSw3) )) )) & (( (active_interaction) = (NuI8) )) )) & (( (next(NuVcredit)) = (( (NuVcredit) - (NuVamount) )) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSw3) )) & (( (next(Nuplace)) = (NuSinvoke) )) )) & (( (active_interaction) = (NuI9) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSinvoke) )) & (( (next(Nuplace)) = (NuSqueryCredit) )) )) & (( (active_interaction) = (NuI10) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (( (( (( (( (Nuplace) = (NuSqueryCredit) )) & (( (next(Nuplace)) = (NuSinvoke) )) )) & (( (active_interaction) = (NuI11) )) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) ) |
		( (( (active_interaction) != (NuI11) )) & (( (( (active_interaction) != (NuI10) )) & (( (( (active_interaction) != (NuI9) )) & (( (( (active_interaction) != (NuI8) )) & (( (( (active_interaction) != (NuI7) )) & (( (( (active_interaction) != (NuI6) )) & (( (( (active_interaction) != (NuI5) )) & (( (( (active_interaction) != (NuI4) )) & (( (( (active_interaction) != (NuI3) )) & (( (( (active_interaction) != (NuI2) )) & (( (( (active_interaction) != (NuI1) )) & (( (( (( (( (next(Nuplace)) = (Nuplace) )) & (( (next(NuVcredit)) = (NuVcredit) )) )) & (( (next(NuVamount1)) = (NuVamount1) )) )) & (( (next(NuVamount)) = (NuVamount) )) )) )) )) )) )) )) )) )) )) )) )) );


MODULE main

	VAR
		NuInteraction		:		{NuI1, NuI2, NuI3, NuI4, NuI5, NuI6, NuI7, NuI8, NuI9, NuI10, NuI11};
		bauc	:	BAUC(NuInteraction);

	DEFINE
		BAUC_Withdraw		:=		bauc.NuPWithdraw;
		BAUC_QueryCredit		:=		bauc.NuPQueryCredit;
		BAUC_Tw3		:=		bauc.NuPTw3;
		BAUC_Donate2		:=		bauc.NuPDonate2;
		BAUC_ReturnCredit		:=		bauc.NuPReturnCredit;
		BAUC_Donate1		:=		bauc.NuPDonate1;
		BAUC_Donate		:=		bauc.NuPDonate;
		BAUC_Tw2		:=		bauc.NuPTw2;
		BAUC_Tw4		:=		bauc.NuPTw4;
		BAUC_Tw0		:=		bauc.NuPTw0;
		BAUC_Tw1		:=		bauc.NuPTw1;


	INVAR
		( (( (NuInteraction) = (NuI4) )) -> (BAUC_Withdraw) ) &
		( (( (NuInteraction) = (NuI10) )) -> (BAUC_QueryCredit) ) &
		( (( (NuInteraction) = (NuI8) )) -> (BAUC_Tw3) ) &
		( (( (NuInteraction) = (NuI3) )) -> (BAUC_Donate2) ) &
		( (( (NuInteraction) = (NuI11) )) -> (BAUC_ReturnCredit) ) &
		( (( (NuInteraction) = (NuI2) )) -> (BAUC_Donate1) ) &
		( (( (NuInteraction) = (NuI1) )) -> (BAUC_Donate) ) &
		( (( (NuInteraction) = (NuI7) )) -> (BAUC_Tw2) ) &
		( (( (NuInteraction) = (NuI9) )) -> (BAUC_Tw4) ) &
		( (( (NuInteraction) = (NuI5) )) -> (BAUC_Tw0) ) &
		( (( (NuInteraction) = (NuI6) )) -> (BAUC_Tw1) );

-- Spec_1 Withdraw of an amount can happen only if credit >= amount (state W1) / AG ( Withdraw & (credit >= amount) -> AG (!(w1))) 
CTLSPEC AG (((bauc.Nuplace = NuSwithdraw) & (bauc.NuVcredit >= bauc.NuVamount)) -> AX (bauc.Nuplace = NuSw1))

-- Spec_2 Always (credit-amount) (Tw3) can only occur after (msg.sender.call.value()amount()(Tw2)) / f can happen only after q   :  AG(q -> AX (f)) 
CTLSPEC AG ((bauc.Nuplace = NuSw2) -> AX (bauc.Nuplace = NuSw3))
-- Spec_2.1 other formulas == Always (credit-amount) (Tw3) can only occur after (msg.sender.call.value()amount()(Tw2)) / f can happen only after q   :  AG(q -> AX (f))
CTLSPEC E [ ! (bauc.Nuplace = NuSw3) U (bauc.Nuplace = NuSw2)]

--Spec_3 Always system return to invoke state after finish any function (Withdraw, queryCredi or donate) / f will eventually happen after q  : AG (q -> AF (p))
CTLSPEC AG ((bauc.Nuplace = NuSwithdraw) -> AF(bauc.Nuplace = NuSinvoke))  
--Spec_3.1 Always system return to invoke state after finish any function (Withdraw, queryCredi or donate) / f will eventually happen after q  : AG (q -> AF (p))
CTLSPEC AG (((bauc.Nuplace = NuSw3) | (bauc.Nuplace = NuSqueryCredit) | (bauc.Nuplace =  NuSdonate1)) -> AF(bauc.Nuplace = NuSinvoke)) 

--Spec_4  invoke will eventually happen /f will eventually happen :   AF (p)
CTLSPEC AF(bauc.Nuplace = NuSinvoke)

--Spec_5 Alway if  doante happened , the credit  must increase the amount1 in value  / f can happen only after q   :  AG(q -> AX (f)) 

CTLSPEC AG ((bauc.Nuplace = NuSdonate) -> AX (bauc.Nuplace = NuSdonate1))




