model donateModel

	port type syncPort

 connector type SINGLE(syncPort p)
    define p
end

atomic type overflow
data int c
data int a
data int b

export port syncPort add
export port syncPort sub
export port syncPort aPlusb
export port syncPort aMinusb
export port syncPort aPlusb1
export port syncPort aMinusb1
export port syncPort finishadd
export port syncPort finishsub
export port syncPort finishadd1
export port syncPort finishsub1

  place    invoke , addition,  subtraction, function_add, function_sub

initial to invoke do {c=0;a= 2; b =3;}

on add from invoke to function_add
on aPlusb from function_add to addition provided ( c + a >=a) do { c = c + a;}
on aPlusb1 from function_add to invoke provided ( c + a < a)
on finishadd from addition to function_add
on finishadd1 from addition to invoke
  
on sub from invoke to function_sub
on aMinusb from function_sub to subtraction provided (b <= c)do {c = c - b;}
on aMinusb1 from function_sub to invoke provided (b > c)
on finishsub from subtraction to function_sub
on finishsub1 from subtraction to invoke
end




compound type globModel

  component overflow BAUC
  
  connector SINGLE BAUC_add ( BAUC.add )
  connector SINGLE BAUC_sub ( BAUC.sub )
 connector SINGLE BAUC_aMinusb ( BAUC.aMinusb )
 connector SINGLE BAUC_aMinusb1 ( BAUC.aMinusb1 )
 connector SINGLE BAUC_finishsub  ( BAUC.finishsub  )
 connector SINGLE BAUC_finishadd  ( BAUC.finishadd)
 connector SINGLE BAUC_aPlusb  ( BAUC.aPlusb  )
 connector SINGLE BAUC_aPlusb1  ( BAUC.aPlusb1  )
 connector SINGLE BAUC_finishsub1  ( BAUC.finishsub1 )
 connector SINGLE BAUC_finishadd1  ( BAUC.finishadd1)

  end

component globModel Root

 end